 // vim ------ 基本控制
  "vim.neovimPath": "/opt/homebrew/bin/nvim",
  "vim.neovimConfigPath": "~/.config/nvim/init.lua",
  "vim.useSystemClipboard": true,
  "vim.surround": true,
  "vim.showMarksInGutter": true,
  "vim.highlightedyank.enable": true,
  "vim.enableNeovim": true,
  "vim.neovimUseConfigFile": true,
  "vim.leader": "<space>", // 绑定vim前导键
  "vim.useCtrlKeys": true, // 由vim接管ctrl+any的按键，而不是vscode
  "vim.hlsearch": true, // 突出显示与当前搜索匹配的所有文本
  // vim ------ keybinding
  "vim.normalModeKeyBindingsNonRecursive": [
    // editor
    {
      "before": [":"],
      "commands": ["workbench.action.showCommands"],
      "silent": true
    },
    {
      "before": ["<leader>", "y"],
      "after": ["\"", "+", "y"]
    },
    {
      "before": ["<leader>", "d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["<leader>", "p"],
      "after": ["\"", "_", "d", "p"]
    },
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["leader", "s"],
      "commands": ["editor.action.startFindReplaceAction"]
    },
    {
      "before": ["z", "c"],
      "commands": ["editor.toggleFold"]
    },
    // session control
    {
      "before": ["L"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["H"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["leader", "b", "d"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["leader", "s", "v"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      "before": ["leader", "s", "h"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["leader", "c", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["[", "e"],
      "commands": ["editor.action.marker.prevInFiles"]
    },
    {
      "before": ["]", "e"],
      "commands": ["editor.action.marker.nextInFiles"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["leader", "e"],
      "commands": ["workbench.files.action.focusFilesExplorer"]
    },
    {
      "before": ["leader", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["leader", "s", "b"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["leader", "q", "q"],
      "commands": ["workbench.action.closeWindow"]
    },
    // coding keymaps
    {
      "before": ["leader", "x", "q"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["leader", "d", "r"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["leader", "c", "r"],
      "commands": ["workbench.action.debug.run"]
    },
    {
      "before": ["leader", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["leader", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["leader", "d", "s"],
      "commands": ["workbench.action.debug.stop"]
    },
    {
      "before": ["leader", "d", "i"],
      "commands": ["workbench.action.debug.stepInto"]
    },
    {
      "before": ["leader", "d", "O"],
      "commands": ["workbench.action.debug.stepOut"]
    },
    {
      "before": ["leader", "d", "o"],
      "commands": ["workbench.action.debug.stepOver"]
    }
  ],
  // 插入模式下的非递归按键绑定
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"],
      "commands": ["workbench.action.files.save"]
    }
  ],
  // 命令模式下的非递归按键绑定
  "vim.commandLineModeKeyBindingsNonRecursive": [],
  // 可视模式下的非递归按键绑定
  "vim.operatorPendingModeKeyBindings": [
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["<leader>", "y"],
      "after": ["\"", "+", "y"]
    },
    {
      "before": ["<leader>", "d"],
      "after": ["\"", "_", "d"]
    }
  ]