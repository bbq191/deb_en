#+TITLE: VK's GNU Emacs Config
#+AUTHOR: Vinci & Kate
#+DESCRIPTION: VK's personal Emacs config.
#+STARTUP: showeverything
#+OPTIONS: toc:5

* TABLE OF CONTENTS :toc_3:
- [[#configuration-start][Configuration: start!]]
  - [[#preliminaries][Preliminaries]]
  - [[#fixing-defaults][Fixing defaults]]
  - [[#visuals][Visuals]]
    - [[#theme-and-modeline][Theme and modeline]]
    - [[#tree-sitter][Tree-sitter]]
    - [[#tabs][Tabs]]
  - [[#text-manipulation][Text manipulation]]
  - [[#quality-of-life-improvements][Quality-of-life improvements]]
  - [[#buffer-management][Buffer management]]
  - [[#org-mode][Org-mode]]
- [[#keymacs-support][Keymacs support]]
- [[#ide-features][IDE features]]
  - [[#magit][Magit]]
  - [[#project-navigation][Project navigation]]
  - [[#completion-and-input][Completion and input]]
  - [[#searching][Searching]]
  - [[#autocomplete][Autocomplete]]
    - [[#corfu][Corfu]]
    - [[#cape][Cape]]
  - [[#debugging][Debugging]]
  - [[#lsp][LSP]]
    - [[#eglot][eglot]]
    - [[#lsp-mode][lsp-mode]]
- [[#treemacs][Treemacs]]
- [[#vterm][VTerm]]
- [[#process-management][Process management]]
- [[#snippets][Snippets]]
- [[#other-languages][Other Languages]]
    - [[#cc][C/C++]]
    - [[#rust][Rust]]
    - [[#javascripttypescript][Javascript/Typescript]]
    - [[#configuration][Configuration]]
    - [[#interchange][Interchange]]
    - [[#markup][Markup]]
    - [[#shell][Shell]]
- [[#miscellany][Miscellany]]

* Configuration: start!

** Preliminaries

We have to be sure to set ~lexical-binding~ in the file header to opt into Emacs lexical scope.

#+begin_src emacs-lisp
  ;; -*- coding: utf-8; lexical-binding: t -*-
#+end_src

Many of Emacs's defaults are ill-suited for my purposes, but the first one that needs fixing is the shockingly low garbage-collection threshold, which defaults to a paltry *:8kb*. Setting it to *:100mb* seems to strike a nice balance between GC pauses and performance. We also need to bump the number of bindings/unwind-protects (~max-specpdl-size~).

#+begin_src emacs-lisp
  (setq gc-cons-threshold 100000000)
  (setq max-specpdl-size 5000)
#+end_src

The most useful Emacs command is ~execute-extended-command~. It should be painless to access from the home row. (~bind-key*~ ensures that this setting is propagated through all major modes, which saves us a bunch of ~unbind-key~ calls in ~use-package~ stanzas.) Why not something even easier, like ~C-;~, you ask? Unfortunately, macOS Terminal.app swallows that keybinding and does nothing with it. I'm sure this is correct behavior by some sort of standard, but I have to work around it, since occasionally I do use Emacs in the terminal.

#+begin_src emacs-lisp
  (bind-key* "C-c ;" #'execute-extended-command)
  (bind-key* "C-c 4" #'execute-extended-command) ;; for a purely left-handed combo
  (bind-key* "C-c C-;" #'execute-extended-command-for-buffer)
#+end_src

Ensure that Emacs has access to the PATH associated with the current environment.

#+begin_src emacs-lisp
  ;; exec-path-from shell was misbehaving, this hack seems to mollify it
  (use-package exec-path-from-shell
    :hook (after-init . exec-path-from-shell-initialize)
    :config
    ;; (setq exec-path-from-shell-debug t)
    (exec-path-from-shell-copy-env "HTTPS_PROXY")
    (exec-path-from-shell-copy-env "HTTP_PROXY")
    (exec-path-from-shell-copy-env "ALL_PROXY")
    (exec-path-from-shell-copy-env "LLVM_HOME")
    (exec-path-from-shell-copy-env "LDFLAGS")
    (exec-path-from-shell-copy-env "CPPFLAGS")
    (exec-path-from-shell-copy-env "CARGO_HOME")
    (exec-path-from-shell-copy-env "RUSTUP_HOME"))
#+end_src

With this auxiliary package for ~use-package~, we can instruct Emacs that a given package depends on the presence of a system tool. It will even install this tool with the system's recommended package manager.

#+begin_src emacs-lisp
  (use-package use-package-ensure-system-package)
#+end_src

With this auxiliary package for ~use-package~, we can instruct Emacs that a given package depends on the presence of a system tool. It will even install this tool with the system's recommended package manager.

** Fixing defaults

Fixing Emacs's defaults is a nontrivial problem. We'll start with UI concerns.

#+begin_src emacs-lisp
  ;; Title
  (setq frame-title-format '("Vinci & Kate's Gnu Emacs - %b")
        icon-title-format frame-title-format)

  ;; Set proxy configurations in emacs
  (setq url-proxy-services
        '(("no_proxy" . "^\\(localhost\\|127.0.0.1\\)")
          ("http" . "localhost:6152")
          ("https" . "localhost:6152")))

  (setq-default major-mode 'text-mode
                fill-column 80
                tab-width 4
                indent-tabs-mode nil     ; Permanently indent with spaces, never with TABs
                truncate-lines t
                display-line-numbers-width 3
                indicate-buffer-boundaries 'left
                display-fill-column-indicator-character ?\u254e)

  (setq visible-bell nil
        inhibit-compacting-font-caches t  ; Don’t compact font caches during GC
        delete-by-moving-to-trash t       ; Deleting files go to OS's trash folder
        make-backup-files nil             ; Forbide to make backup files
        auto-save-default nil             ; Disable auto save
        blink-cursor-mode nil             ; No eyes distraction
        column-number-mode t
        create-lockfiles nil
        uniquify-buffer-name-style 'post-forward-angle-brackets ; Show path if names are same
        adaptive-fill-regexp "[ t]+|[ t]*([0-9]+.|*+)[ t]*"
        adaptive-fill-first-line-regexp "^* *$"
        sentence-end "\\([。！？]\\|……\\|[.?!][]\"')}]*\\($\\|[ \t]\\)\\)[ \t\n]*"
        sentence-end-double-space nil     ; Double-spaces after periods is morally wrong.
        word-wrap-by-category t
        use-short-answers t
        mark-even-if-inactive nil         ; Fix undo in commands affecting the mark.
        ;; Suppress GUI features
        use-file-dialog nil
        use-dialog-box nil
        inhibit-startup-screen t
        inhibit-startup-echo-area-message user-login-name
        inhibit-default-init t
        ;; Let C-k delete the whole line.
        kill-whole-line t
        ;; search should be case-sensitive by default
        case-fold-search nil
        ;; I want to close these fast, so switch to it so I can just hit 'q'
        help-window-select t
        ;; highlight error messages more aggressively
        next-error-message-highlight t
        ;; don't let the minibuffer muck up my window tiling
        read-minibuffer-restore-windows t
        ;; don't let the minibuffer muck up my window tiling
        read-minibuffer-restore-windows t
        ;; scope save prompts to individual projects
        save-some-buffers-default-predicate 'save-some-buffers-root
        ;; don't keep duplicate entries in kill ring
        kill-do-not-save-duplicates t
        truncate-string-ellipsis "…"  ;; unicode ellipses are better
        custom-safe-themes t
        mouse-wheel-tilt-scroll t
        mouse-wheel-flip-direction t
        ;; eke out a little more scrolling performance
        fast-but-imprecise-scrolling t
        ;; prefer newer elisp files
        load-prefer-newer t
        ;; more info in completions
        completions-detailed t
        ;; 允许在活动的minibuffer中执行命令并打开新的minibuffer。这样可以实现命令的嵌套。
        enable-recursive-minibuffers t
        ;; Some pretty config from prucell
        initial-scratch-message (concat ";; Happy hacking, " user-login-name " - Emacs ♥ you!\n\n"))

  (global-auto-revert-mode t)  ;; Automatically show changes if the file has changed
  (delete-selection-mode t)    ;; You can select text and delete it by typing.
  (savehist-mode)
  (minibuffer-depth-indicate-mode) ;;开头显示当前嵌套层级的深度,用方括号括起,以示区分
  ;; UTF-8 should always, always be the default.
  (set-charset-priority 'unicode)
  (prefer-coding-system 'utf-8-unix)

  ;; Emacs has problems with very long lines.
  (global-so-long-mode)

  ;; URLs should be highlighted and linkified.
  (global-goto-address-mode)

  ;; Display wrape line
  (global-display-fill-column-indicator-mode 1)
  (global-visual-line-mode 1)

  ;; Show line numbers
  (global-display-line-numbers-mode 1)
  (setq display-line-numbers-type 'relative)

  ;; Eemacs true transparent
  (set-frame-parameter (selected-frame) 'alpha '(90 90))
  (add-to-list 'default-frame-alist '(alpha 90 90))

  ;; Emacs requires you to hit ESC three times to escape quit the minibuffer.
  (global-set-key [escape] 'keyboard-escape-quit)

  ;; Fonts
  (defun vk/setup-fonts ()
    (set-face-attribute 'default nil
                        :family "Iosevka Nerd Font"
                        :height 170)

    (set-fontset-font t 'symbol (font-spec :family "Nerd Font Symbol Mono") nil 'prepend)
    (set-fontset-font t 'emoji (font-spec :family "Apple Color Emoji") nil 'prepend)
    (set-fontset-font t 'han (font-spec :family "Source Han Sans CN"))

    (set-face-attribute 'font-lock-comment-face nil :slant 'italic)
    (set-face-attribute 'font-lock-keyword-face nil :slant 'italic))

  (vk/setup-fonts)
  (add-hook 'window-setup-hook #'vk/setup-fonts)
  (add-hook 'server-after-make-frame-hook #'vk/setup-fonts)
#+end_src

Keep modeline clean.

#+begin_src emacs-lisp
  (use-package diminish
    :config (diminish 'visual-line-mode))
#+end_src

Keep ~/.emacs.d/ clean.

#+begin_src emacs-lisp
  (use-package no-littering
    ;; After no-littering
    ;; Set user custom
    :config
    (setq custom-file (no-littering-expand-etc-file-name "vk-custom.el")))
#+end_src

Emacs 27 comes with fast current-line highlight functionality, but it can produce some visual feedback in ~vterm~ buffers, so we only activate it in programming or text modes.

#+begin_src emacs-lisp
  (use-package hl-line)
  (add-hook 'prog-mode-hook #'hl-line-mode)
  (add-hook 'text-mode-hook #'hl-line-mode)
#+end_src

There are a great many keybindings that are actively hostile, in that they are bound to useless or obsolete functions that are really easy to trigger accidentally. (The lambda is because ~unbind-key~ is a macro.)

#+begin_src emacs-lisp
  (defun vk/unbind-bad-keybindings ()
    "Remove unhelpful keybindings."
    (-map (lambda (x) (unbind-key x))
          '("C-x C-r"         ;; find-file-read-only
            "C-x C-f"         ;; find-file
            "C-x C-d"         ;; list-directory
            "C-z"             ;; suspend-frame
            "C-x C-z"         ;; again
            "<mouse-2>"       ;; pasting with mouse-wheel click
            "<C-wheel-down>"  ;; text scale adjust
            "<C-wheel-up>"    ;; ditto
            "s-l"             ;; goto-line
            "s-w"             ;; delete-frame
            "s-n"             ;; make-frame
            "s-t"             ;; ns-popup-font-panel
            "s-p"             ;; ns-print-buffer
            "C-x C-q"         ;; read-only-mode
            "C-x C-c"         ;; quit emacs
            "C-h")))          ;; help
#+end_src
