#+TITLE: Personal GNU Emacs Config
#+AUTHOR: Vinci Xu & Kate Ma
#+DESCRIPTION: Vinci & Kate's personal Emacs config
#+OPTIONS: toc:4

** Neecessory Configes
*** Global Keybinding
**** Basic

#+begin_src emacs-lisp
  (with-no-warnings
    ;; Key Modifiers
    (setq mac-option-modifier 'meta
      mac-command-modifier 'super)
    (bind-keys ([(super a)] . mark-whole-buffer)
           ([(super c)] . kill-ring-save)
           ([(super l)] . goto-line)
           ([(super q)] . save-buffers-kill-emacs)
           ([(super s)] . save-buffer)
           ([(super v)] . yank)
           ([(super w)] . delete-frame)
           ([(super z)] . undo)))
  ;; reload init

  ;; recent file
  (bind-keys ("C-x C-r" . recentf-open-files))
  ;; zooming in/out
  (global-set-key (kbd "C-=") 'text-scale-increase)
  (global-set-key (kbd "C--") 'text-scale-decrease)
    ;; Insert new line
  
#+end_src


** Shackle
Customize popwin behavior

#+begin_src emacs-lisp
  (use-package shackle
    :ensure t
    :hook (after-init . shackle-mode)
    :custom
    (shackle-default-size 0.5)
    (shackle-default-alignment 'below)
    (shackle-rules '((magit-status-mode    :select t :inhibit-window-quit t :same t)
                     (magit-log-mode       :select t :inhibit-window-quit t :same t)
                     (vc-annotate-mode     :select t :inhibit-window-quit t :same t)
                     ("*quickrun*"         :select t :inhibit-window-quit t :same t)
                     (profiler-report-mode :select t)
                     (xwidget-webkit-mode  :select t :same t)
                     (comint-mode          :select t :align t :size 0.4)
                     (grep-mode            :select t :align t)
                     (rg-mode              :select t :align t)
                     ;; See also `help-window-select'
                     (apropos-mode         :select nil :align t :size 0.4)
                     (help-mode            :select nil :align t :size 0.4)
                     ("*Flycheck errors*"         :select t   :align t :size 10)
                     ("*Backtrace*"               :select t   :align t :size 15)
                     ("*Shell Command Output*"    :select nil :align t :size 0.4)
                     ("*Async Shell Command*"     :select nil :align t :size 0.4)
                     ("*Org-Babel Error Output*"  :select nil :align t :size 0.3)
                     ("*package update results*"  :select nil :align t :size 10)
                     ("*Process List*"            :select t   :align t :size 0.3)
                     ("*Occur*"                   :select t   :align t)
                     ("\\*eldoc\\( for \\)?.*\\*" :select nil :align t :size 15 :regexp t))))
#+end_src

** Language
*** Rust
**** Rustic
rustic = basic rust-mode + additions

#+begin_src emacs-lisp
  (use-package rustic
    :ensure
    :bind (:map rustic-mode-map
                ("M-j" . lsp-ui-imenu)
                ("M-?" . lsp-find-references)
                ("C-c C-c l" . flycheck-list-errors)
                ("C-c C-c a" . lsp-execute-code-action)
                ("C-c C-c r" . lsp-rename)
                ("C-c C-c q" . lsp-workspace-restart)
                ("C-c C-c Q" . lsp-workspace-shutdown)
                ("C-c C-c s" . lsp-rust-analyzer-status)
                ("C-c C-c e" . lsp-rust-analyzer-expand-macro)
                ("C-c C-c d" . dap-hydra)
                ("C-c C-c h" . lsp-ui-doc-glance))
    :config (push 'rustic-clippy flycheck-checkers)
            (setq rustic-format-on-save t)
    ;; uncomment for less flashiness
    ;; (setq lsp-eldoc-hook nil)
    ;; (setq lsp-enable-symbol-highlighting nil)
    ;; (setq lsp-signature-auto-activate nil)
    :custom (rustic-lsp-setup-p nil)
            (rustic-analyzer-command '("~/.local/share/cargo/bin/rust-analyzer"))
            (rustic-flycheck-clippy-params "--message-format=json -Zunstable-options")
            (rustic-rustfmt-args "+nightly")
            (rustic-rustfmt-config-alist '((hard_tabs . t) (skip_children . nil)))
    
    (add-hook 'rustic-mode-hook 'kv/rustic-mode-hook))

  (defun kv/rustic-mode-hook ()
    ;; so that run C-c C-c C-r works without having to confirm, but don't try to
    ;; save rust buffers that are not file visiting. Once
    ;; https://github.com/brotzeit/rustic/issues/253 has been resolved this should
    ;; no longer be necessary.
    (when buffer-file-name
      (setq-local buffer-save-without-query t))
    (add-hook 'before-save-hook 'lsp-format-buffer nil t))
#+end_src

**** Rust Playground
Create / cleanup rust scratch projects quickly

#+begin_src emacs-lisp
  (use-package rust-playground :ensure)
#+end_src

**** Toml
Cargo.toml and other config files
#+begin_src emacs-lisp
  (use-package toml-mode :ensure)
#+end_src

*** C/C++

#+begin_src emacs-lisp
#+end_src

#+end_src
